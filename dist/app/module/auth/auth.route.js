"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRoutes = void 0;
const express_1 = __importDefault(require("express"));
const auth_controller_1 = require("./auth.controller");
const validateRequest_1 = require("../../midleware/validateRequest");
// import userValidationSchemaZod from "../user/user.validation";
const auth_validation_1 = require("./auth.validation");
const isAdmin_1 = __importDefault(require("../../midleware/isAdmin"));
const user_contents_1 = require("../../conestants/user.contents");
const router = express_1.default.Router();
router.post('/resister', (0, validateRequest_1.validateRequest)(auth_validation_1.AuthValidation.registerValidationSchema), auth_controller_1.authUserController.resister);
router.post('/login', (0, validateRequest_1.validateRequest)(auth_validation_1.AuthValidation.loginValidationSchema), auth_controller_1.authUserController.login);
router.post('/refresh-token', (0, validateRequest_1.validateRequest)(auth_validation_1.AuthValidation.refreshTokenValidationSchema), auth_controller_1.authUserController.refreshToken);
router.post('/forget-password', (0, validateRequest_1.validateRequest)(auth_validation_1.AuthValidation.forgetPasswordValidationSchema), auth_controller_1.authUserController.forgetPassword);
router.post('/reset-password', (0, validateRequest_1.validateRequest)(auth_validation_1.AuthValidation.resetPasswordValidationSchema), auth_controller_1.authUserController.resetPassword);
router.patch('/changePassword', (0, isAdmin_1.default)(user_contents_1.USER_ROLE.admin, user_contents_1.USER_ROLE.user), (0, validateRequest_1.validateRequest)(auth_validation_1.AuthValidation.changePasswordValidationSchema), auth_controller_1.authUserController.login);
exports.authRoutes = router;
